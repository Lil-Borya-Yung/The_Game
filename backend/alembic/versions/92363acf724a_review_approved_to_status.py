"""review approved to status

Revision ID: 92363acf724a
Revises: 2bedc3fbe848
Create Date: 2024-12-13 18:18:22.048604

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "92363acf724a"
down_revision: Union[str, None] = "2bedc3fbe848"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, "file", ["id"], schema="ratereel")
    op.create_unique_constraint(None, "movie", ["id"], schema="ratereel")
    op.drop_constraint("movie_logo_file_id_fkey", "movie", type_="foreignkey")
    op.create_foreign_key(
        None,
        "movie",
        "file",
        ["logo_file_id"],
        ["id"],
        source_schema="ratereel",
        referent_schema="ratereel",
    )
    op.add_column("review", sa.Column("status", sa.Text(), nullable=False))
    op.create_unique_constraint(None, "review", ["id"], schema="ratereel")
    op.drop_constraint("review_movie_id_fkey", "review", type_="foreignkey")
    op.drop_constraint("review_user_id_fkey", "review", type_="foreignkey")
    op.create_foreign_key(
        None,
        "review",
        "movie",
        ["movie_id"],
        ["id"],
        source_schema="ratereel",
        referent_schema="ratereel",
    )
    op.create_foreign_key(
        None,
        "review",
        "user",
        ["user_id"],
        ["id"],
        source_schema="ratereel",
        referent_schema="ratereel",
    )
    op.drop_column("review", "approved")
    op.create_unique_constraint(None, "role", ["id"], schema="ratereel")
    op.create_unique_constraint(None, "user", ["id"], schema="ratereel")
    op.drop_constraint("user_role_id_fkey", "user", type_="foreignkey")
    op.create_foreign_key(
        None,
        "user",
        "role",
        ["role_id"],
        ["id"],
        source_schema="ratereel",
        referent_schema="ratereel",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user", schema="ratereel", type_="foreignkey")
    op.create_foreign_key("user_role_id_fkey", "user", "role", ["role_id"], ["id"])
    op.drop_constraint(None, "user", schema="ratereel", type_="unique")
    op.drop_constraint(None, "role", schema="ratereel", type_="unique")
    op.add_column(
        "review",
        sa.Column("approved", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "review", schema="ratereel", type_="foreignkey")
    op.drop_constraint(None, "review", schema="ratereel", type_="foreignkey")
    op.create_foreign_key("review_user_id_fkey", "review", "user", ["user_id"], ["id"])
    op.create_foreign_key(
        "review_movie_id_fkey", "review", "movie", ["movie_id"], ["id"]
    )
    op.drop_constraint(None, "review", schema="ratereel", type_="unique")
    op.drop_column("review", "status")
    op.drop_constraint(None, "movie", schema="ratereel", type_="foreignkey")
    op.create_foreign_key(
        "movie_logo_file_id_fkey", "movie", "file", ["logo_file_id"], ["id"]
    )
    op.drop_constraint(None, "movie", schema="ratereel", type_="unique")
    op.drop_constraint(None, "file", schema="ratereel", type_="unique")
    # ### end Alembic commands ###
